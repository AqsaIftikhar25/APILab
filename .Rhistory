library(APIpkg)
l1 <- vott("Gamov, Pavel  (-)")
(S) %in% l1$name
"(S)" %in% l1$name
l1$name
"(-)" %in% l1$name
"(-)" %in% l1$name
l1 <- vott("Abdu, Said  (FP)")
'(FP)' %in% l1$name
'A' %in% l1$name
l1$name
"Abdu, Said  (FP)" %in% l1$name
"Abdu, Said" %in% l1$name
chara <- NULL
start <- 2015
end <- 2020
for(i in start:end){
chara <- past(i,chara)
}
chara <- NULL
start <- 2015
end <- 2020
for(i in start:end){
chara <- paste(i,chara)
}
chara <- NULL
start <- 2015
end <- 2020
for(i in start:end){
chara <- paste(i,chara)
}
chara
chara <- NULL
start <- 2015
start_la <- start%%2000
end <- 2020
end_la <- end%%2000
for(i in start:end){
i_la <- i%%2000
chara <- paste(chara,i,"%2F",i_la)
}
chara
chara <- NULL
start <- 2015
start_la <- start%%2000
end <- 2020
end_la <- end%%2000
for(i in start:end){
i_la <- i%%2000
chara <- paste(i,"%2F",i_la,chara)
}
chara
chara <- NULL
start <- 2015
start_la <- start%%2000
end <- 2020
end_la <- end%%2000
for(i in start:end){
i_la <- i%%2000
chara <- paste(i,"%2F",i_la,"&",chara)
}
chara
chara <- NULL
start <- 2015
start_la <- start%%2000
end <- 2020
end_la <- end%%2000
for(i in start:end){
i_la <- i%%2000
chara <- paste(i,"%2F",i_la,"&rm=",chara)
}
chara
chara <- NULL
start <- 2015
start_la <- start%%2000
end <- 2020
end_la <- end%%2000
for(i in start:end){
i_la <- i%%2000
chara <- paste(i,"%2F",i_la+1,"&rm=",chara)
}
chara
chara <- NULL
start <- 2015
start_la <- start%%2000
end <- 2020
end_la <- end%%2000
for(i in start:end){
i_la <- i%%2000
chara <- paste(i,"%2F",i_la+1,"&rm=",chara)
}
chara
paste(a,d)
paste('a','d')
paste('a''d')
paste('a','d')
paste("A", 1:6, sep = "",collapse=",")
paste("A", 1:6, sep = "",collapse="")
paste("A", 1:6,collapse="")
paste("A", "B", sep = "",collapse="")
chara <- NULL
start <- 2015
start_la <- start%%2000
end <- 2020
end_la <- end%%2000
for(i in start:end){
i_la <- i%%2000
chara <- paste(i,"%2F",i_la+1,"&rm=",chara,sep = "",collapse = "")
}
chara
url <- paste("http://data.riksdagen.se/voteringlista/?rm=",chara,"&bet=&punkt=&parti=",name1,'&valkrets=&rost=&iid=&sz=500&utformat=json&gruppering=namn',sep = "",collapse = "")
name1 <- C
chara <- NULL
start <- 2015
start_la <- start%%2000
end <- 2020
end_la <- end%%2000
for(i in start:end){
i_la <- i%%2000
chara <- paste(i,"%2F",i_la+1,"&rm=",chara,sep = "",collapse = "")
}
chara
url <- paste("http://data.riksdagen.se/voteringlista/?rm=",chara,"&bet=&punkt=&parti=",name1,'&valkrets=&rost=&iid=&sz=500&utformat=json&gruppering=namn',sep = "",collapse = "")
name1 <- C
chara <- NULL
start <- 2015
start_la <- start%%2000
end <- 2020
end_la <- end%%2000
for(i in start:end){
i_la <- i%%2000
chara <- paste(i,"%2F",i_la+1,"&rm=",chara,sep = "",collapse = "")
}
chara
url <- paste("http://data.riksdagen.se/voteringlista/?rm=",chara,"&bet=&punkt=&parti=",name1,'&valkrets=&rost=&iid=&sz=500&utformat=json&gruppering=namn',sep = "",collapse = "")
url <- paste("http://data.riksdagen.se/voteringlista/?rm=","&bet=&punkt=&parti=",name1,'&valkrets=&rost=&iid=&sz=500&utformat=json&gruppering=namn',sep = "",collapse = "")
url <- paste("http://data.riksdagen.se/voteringlista/?rm=",chara,"&bet=&punkt=&parti=",'&valkrets=&rost=&iid=&sz=500&utformat=json&gruppering=namn',sep = "",collapse = "")
url <- paste("http://data.riksdagen.se/voteringlista/?rm=",chara,"&bet=&punkt=&parti=",name1,'&valkrets=&rost=&iid=&sz=500&utformat=json&gruppering=namn',sep = "")
name1 <- "C"
chara <- NULL
start <- 2015
start_la <- start%%2000
end <- 2020
end_la <- end%%2000
for(i in start:end){
i_la <- i%%2000
chara <- paste(i,"%2F",i_la+1,"&rm=",chara,sep = "",collapse = "")
}
chara
url <- paste("http://data.riksdagen.se/voteringlista/?rm=",chara,"&bet=&punkt=&parti=",name1,'&valkrets=&rost=&iid=&sz=500&utformat=json&gruppering=namn',sep = "",collapse = "")
url
library(httr)
library(jsonlite)
name1 <- "C"
chara <- NULL
start <- 2015
start_la <- start%%2000
end <- 2020
end_la <- end%%2000
for(i in start:end){
i_la <- i%%2000
chara <- paste(i,"%2F",i_la+1,"&rm=",chara,sep = "",collapse = "")
}
vot_url <- paste("http://data.riksdagen.se/voteringlista/?rm=",chara,"&bet=&punkt=&parti=",name1,'&valkrets=&rost=&iid=&sz=500&utformat=json&gruppering=namn',sep = "",collapse = "")
#get the URL
# vot_url <- "http://data.riksdagen.se/voteringlista/?bet=&punkt=&valkrets=&rost=&iid=&sz=500&utformat=json&gruppering=namn"
# vot_url <- paste("http://data.riksdagen.se/voteringlista/?bet=&punkt=&parti=",name1,"&valkrets=&rost=&iid=&sz=500&utformat=json&gruppering=namn")
vot <- GET(vot_url)
vot
library(httr)
library(jsonlite)
name1 <- "C"
chara <- NULL
start <- 2015
start_la <- start%%2000
end <- 2020
end_la <- end%%2000
for(i in start:end){
i_la <- i%%2000
chara <- paste(i,"%2F",i_la+1,"&rm=",chara,sep = "",collapse = "")
}
vot_url <- paste("http://data.riksdagen.se/voteringlista/?rm=",chara,"&bet=&punkt=&parti=",name1,'&valkrets=&rost=&iid=&sz=500&utformat=json&gruppering=namn',sep = "",collapse = "")
#get the URL
# vot_url <- "http://data.riksdagen.se/voteringlista/?bet=&punkt=&valkrets=&rost=&iid=&sz=500&utformat=json&gruppering=namn"
# vot_url <- paste("http://data.riksdagen.se/voteringlista/?bet=&punkt=&parti=",name1,"&valkrets=&rost=&iid=&sz=500&utformat=json&gruppering=namn")
vot <- GET(vot_url)
#convert the format from json to R
vot_data <- fromJSON(content(vot,"text"))
library(httr)
library(jsonlite)
name1 <- "C"
chara <- NULL
start <- 2015
start_la <- start%%2000
end <- 2020
end_la <- end%%2000
for(i in start:end){
i_la <- i%%2000
chara <- paste(i,"%2F",i_la+1,"&rm=",chara,sep = "",collapse = "")
}
vot_url <- paste("http://data.riksdagen.se/voteringlista/?rm=",chara,"&bet=&punkt=&parti=",name1,'&valkrets=&rost=&iid=&sz=500&utformat=json&gruppering=namn',sep = "",collapse = "")
#get the URL
# vot_url <- "http://data.riksdagen.se/voteringlista/?bet=&punkt=&valkrets=&rost=&iid=&sz=500&utformat=json&gruppering=namn"
# vot_url <- paste("http://data.riksdagen.se/voteringlista/?bet=&punkt=&parti=",name1,"&valkrets=&rost=&iid=&sz=500&utformat=json&gruppering=namn")
vot <- GET(vot_url)
#convert the format from json to R
vot_data <- fromJSON(content(vot,"text"))
# vot_data <- fromJSON(rawToChar(vot$content))
#get the data
nam = approve = nay = absent = abstain<- NULL
nam <- vot_data$voteringlista$votering$namn
nam
library(APIpkg)
vott("C",2016,2020)
library(APIpkg)
vott("C",2016,2020)
library(APIpkg)
vott("C",2016,2020)
library(APIpkg)
vott("C",2016,2020)
library(httr)
library(jsonlite)
name1 <- "C"
start <- 2015
end <- 2020
start_la <- start%%2000
end_la <- end%%2000
chara <- NULL
for(i in start:end){
i_la <- i%%2000
chara <- paste(i,"%2F",i_la+1,"&rm=",chara,sep = "",collapse = "")
}
#get the URL
vot_url <- paste("http://data.riksdagen.se/voteringlista/?rm=",chara,"&bet=&punkt=&parti=",name1,'&valkrets=&rost=&iid=&sz=500&utformat=json&gruppering=namn',sep = "",collapse = "")
#convert the format from json to R
vot_data <- fromJSON(content(vot,"text"))
# vot_data <- fromJSON(rawToChar(vot$content))
#get the data
nam = approve = nay = absent = abstain<- NULL
nam <- vot_data$voteringlista$votering$namn
approve <- as.numeric(vot_data$voteringlista$votering$Ja)
# nay <- as.numeric(vot_data$voteringlista$votering$Nej)
# absent <- as.numeric(vot_data$voteringlista$votering[,4])
# abstain <- as.numeric(vot_data$voteringlista$votering[,5])
# #calculate the attendance rate, attitude and participation
# pon = pap = attend <- NULL
# for(i in 1:length(vot_data$voteringlista$votering$namn)){
#     # the attitde is positive or negtive
#     pon[i] <- approve[i]/(approve[i]+nay[i])
#
#     # participation of the member
#     pap[i] <- abstain[i]/(approve[i]+nay[i])
#
#     # attendence rate of the member
#     attend[i] <- 1-absent[i]/(approve[i]+nay[i]+abstain[i]+absent[i])
#   }
#
# for(i in 1:length(vot_data$voteringlista$votering$namn)){
#   if(nam[i]==name1){
#     name_mem <- nam[i]
#     approve_mem <- approve[i]
#     nay_mem <- nay[i]
#     absent_mem <- absent[i]
#     abstain_mem <- abstain[i]
#     pon_mem <- pon[i]
#     pap_mem <- pap[i]
#     attend_mem <- attend[i]
#     break
#   }
# }
class(nam)
# make it into a dataframe
l <- as.data.frame(cbind(name=nam,approve=approve))
l
iris
mapa <- readOGR(dsn=path.expand("C:/~/SWE_adm_shp"),layer="SWE_adm2", encoding = "UTF-8")
install.packages(rgdal)
install.packages('rgdal)
install.packages('rgdal')
mapa <- readOGR(dsn=path.expand("C:/~/SWE_adm_shp"),layer="SWE_adm2", encoding = "UTF-8")
library(rgdal)
mapa <- readOGR(dsn=path.expand("C:/~/SWE_adm_shp"),layer="SWE_adm2", encoding = "UTF-8")
library(httr)
library(jsonlite)
name1 <- "C"
start <- 2015
end <- 2020
start_la <- start%%2000
end_la <- end%%2000
chara <- NULL
for(i in start:end){
i_la <- i%%2000
chara <- paste(i,"%2F",i_la+1,"&rm=",chara,sep = "",collapse = "")
}
#get the URL
vot_url <- paste("http://data.riksdagen.se/voteringlista/?rm=",chara,"&bet=&punkt=&parti=",name1,'&valkrets=&rost=&iid=&sz=500&utformat=json&gruppering=namn',sep = "",collapse = "")
#convert the format from json to R
vot_data <- fromJSON(content(vot,"text"))
# vot_data <- fromJSON(rawToChar(vot$content))
#get the data
nam = approve = nay = absent = abstain<- NULL
nam <- vot_data$voteringlista$votering$namn
approve <- as.numeric(vot_data$voteringlista$votering$Ja)
# nay <- as.numeric(vot_data$voteringlista$votering$Nej)
# absent <- as.numeric(vot_data$voteringlista$votering[,4])
# abstain <- as.numeric(vot_data$voteringlista$votering[,5])
# #calculate the attendance rate, attitude and participation
# pon = pap = attend <- NULL
# for(i in 1:length(vot_data$voteringlista$votering$namn)){
#     # the attitde is positive or negtive
#     pon[i] <- approve[i]/(approve[i]+nay[i])
#
#     # participation of the member
#     pap[i] <- abstain[i]/(approve[i]+nay[i])
#
#     # attendence rate of the member
#     attend[i] <- 1-absent[i]/(approve[i]+nay[i]+abstain[i]+absent[i])
#   }
#
# for(i in 1:length(vot_data$voteringlista$votering$namn)){
#   if(nam[i]==name1){
#     name_mem <- nam[i]
#     approve_mem <- approve[i]
#     nay_mem <- nay[i]
#     absent_mem <- absent[i]
#     abstain_mem <- abstain[i]
#     pon_mem <- pon[i]
#     pap_mem <- pap[i]
#     attend_mem <- attend[i]
#     break
#   }
# }
class(nam)
# make it into a dataframe
l <- cbind(name=nam,approve=approve)
l
class(l)
readOGR()
mapa <- readOGR(dsn=path.expand("C:/~/SWE_adm_shp"),layer="SWE_adm2", encoding = "UTF-8")
mapa <- readOGR(dsn=path.expand("D:/EX/Lab5/APILab/SWE_adm_shp"),layer="SWE_adm2", encoding = "UTF-8")
mapa <- readOGR(dsn=".",layer="votesinfo", encoding = "UTF-8")
library(httr)
library(jsonlite)
name1 <- "C"
start <- 2015
end <- 2020
start_la <- start%%2000
end_la <- end%%2000
chara <- NULL
for(i in start:end){
i_la <- i%%2000
chara <- paste(i,"%2F",i_la+1,"&rm=",chara,sep = "",collapse = "")
}
#get the URL
vot_url <- paste("http://data.riksdagen.se/voteringlista/?rm=",chara,"&bet=&punkt=&parti=",name1,'&valkrets=&rost=&iid=&sz=500&utformat=json&gruppering=namn',sep = "",collapse = "")
#convert the format from json to R
vot_data <- fromJSON(content(vot,"text"))
# vot_data <- fromJSON(rawToChar(vot$content))
#get the data
nam = approve = nay = absent = abstain<- NULL
nam <- vot_data$voteringlista$votering$namn
approve <- as.numeric(vot_data$voteringlista$votering$Ja)
nay <- as.numeric(vot_data$voteringlista$votering$Nej)
absent <- as.numeric(vot_data$voteringlista$votering[,4])
abstain <- as.numeric(vot_data$voteringlista$votering[,5])
# #calculate the attendance rate, attitude and participation
# pon = pap = attend <- NULL
# for(i in 1:length(vot_data$voteringlista$votering$namn)){
#     # the attitde is positive or negtive
#     pon[i] <- approve[i]/(approve[i]+nay[i])
#
#     # participation of the member
#     pap[i] <- abstain[i]/(approve[i]+nay[i])
#
#     # attendence rate of the member
#     attend[i] <- 1-absent[i]/(approve[i]+nay[i]+abstain[i]+absent[i])
#   }
#
# for(i in 1:length(vot_data$voteringlista$votering$namn)){
#   if(nam[i]==name1){
#     name_mem <- nam[i]
#     approve_mem <- approve[i]
#     nay_mem <- nay[i]
#     absent_mem <- absent[i]
#     abstain_mem <- abstain[i]
#     pon_mem <- pon[i]
#     pap_mem <- pap[i]
#     attend_mem <- attend[i]
#     break
#   }
# }
class(nam)
# make it into a dataframe
l <- data.frame(cbind(name=nam,approve=approve))
l
class(l$name)
class(nam)
iris
library(APIpkg)
library(APIpkg)
usethis::use_testthat()
usethis::use_testthat()
library(APIpkg)
vott("C",2016,2020)
usethis::use_testthat()
vott("FP",2016,2020)
library(APIpkg)
vott("FP",2016,2020)
vott("fp",2016,2020)
vott("C",2016,2020)
l1 <- vott("C",2015,2020)
l1 <- vott("FP",2015,2020)
l1
l1 <- vott("M",2015,2020)
l1
devtools::use_vignette("my-vignette")
usethis::use_vignette()
usethis::use_vignette("APIvig")
class(vott("C",2016,2020))
library(APIpkg)
l1 <- vott("C",2015,2020)
l1
l1[1:10,1]
devtools::install_github("https://github.com/AqsaIftikhar25/APILab/tree/master/APIpkg")
devtools::install_github("AqsaIftikhar25/APILab")
devtools::install_github("yourusername/repo")
devtools::install_github("AqsaIftikhar25/APILab")
devtools::install_github("AqsaIftikhar25/APILab",force = TRUE)
l1 <- vott("C",2015,2020)
library(APIpkg)
l1 <- vott("C",2015,2020)
?APIpkg
??APIpkg
library(APIpkg)
library(APIpkg)
l1 <- vott("C",2015,2020)
devtools::install_github("AqsaIftikhar25/APILab",force = TRUE)
library(APIpkg)
l1 <- vott("C",2015,2020)
devtools::install_github("AqsaIftikhar25/APILab",force = TRUE)
devtools::install_github("AqsaIftikhar25/APILab",force = TRUE)
library(APIpkg)
APIpkg::vott()
?vott
library(APIpkg)
devtools::install_github("AqsaIftikhar25/APILab",force = TRUE)
library(APIpkg)
l1 <- vott("C",2015,2020)
library(APIpkg)
l1 <- vott("C",2015,2020)
devtools::install_github("AqsaIftikhar25/APILab",force = TRUE)
library(APIpkg)
l1 <- vott("C",2015,2020)
APIAPIpkg::vott("C",2015,2020)
APIpkg::vott("C",2015,2020)
devtools::install_github("AqsaIftikhar25/APILab",force = TRUE)
devtools::install_github("AqsaIftikhar25/APILab")
library(APIpkg)
APIpkg::vott("C",2015,2020)
l1 <- vott("C",2015,2020)
?vott()
?vott
remove.packages("APIpkg")
devtools::install_github("AqsaIftikhar25/APILab")
remove.packages("APIpkg")
devtools::install_github("AqsaIftikhar25/APILab")
devtools::install_github("AqsaIftikhar25/APILab")
library(APIpkg)
?vott()
?vott
l1 <- vott("C",2015,2020)
vott("x", 2000, 2016)
devtools::install_github("AqsaIftikhar25/APILab/APIpkg")
devtools::install_github("AqsaIftikhar25/APILab/APIpkg")
library(APIpkg)
vott("x", 2000, 2016)
vott("C", 2000, 2016)
library(APIpkg)
library(APIpkg)
l1 <- vott("C",2015,2020)
l1
load("D:/EX/lab5/APILab/.RData")
library(APIpkg)
l1 <- vott("C",2015,2020)
l1
devtools::install_github("AqsaIftikhar25/APILab")
l1 <- vott("C",2015,2020)
Sys.setenv(LANGUAGE="EN")
l1 <- vott("C",2015,2020)
library(APIpkg)
l1 <- vott("C",2015,2020)
l1 <- vott("C",2002,2020)
l1
l1 <- vott("C",1900,2020)
l1
GET("http://data.riksdagen.se/voteringlista/?rm=2020%2F21&rm=2019%2F20&rm=2018%2F19&rm=2017%2F18&rm=2016%2F17&rm=2001%2F02&bet=&punkt=&valkrets=&rost=&iid=&sz=500&utformat=json&gruppering=namn")
l2 <-  GET("http://data.riksdagen.se/voteringlista/?rm=2020%2F21&rm=2019%2F20&rm=2018%2F19&rm=2017%2F18&rm=2016%2F17&rm=2001%2F02&bet=&punkt=&valkrets=&rost=&iid=&sz=500&utformat=json&gruppering=namn")
l1
l2
l2$status_code
l1 <- vott("C",1900,2020)
l1 <- vott("C",1900,2020)
library(APIpkg)
l1 <- vott("C",2015,2020)
devtools::install_github("AqsaIftikhar25/APILab")
devtools::install_github("AqsaIftikhar25/APILab",force = TRUE)
remove.packages("APIpkg")
devtools::install_github("AqsaIftikhar25 / APILab")
devtools::install_github("AqsaIftikhar25/APILab")
l1 <- vott("C",2015,2020)
devtools::install_github("AqsaIftikhar25/APILab")
remove.packages("APIpkg")
